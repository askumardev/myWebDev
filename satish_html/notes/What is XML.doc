{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fswiss\fprq2\fcharset0 Arial;}{\f1\fswiss\fprq2 Arial;}}
{\colortbl ;\red255\green0\blue0;\red0\green0\blue0;\red0\green0\blue255;\red192\green192\blue192;\red255\green255\blue0;}
{\stylesheet{ Normal;}{\s1 heading 1;}{\s2 heading 2;}{\s3 heading 3;}}
{\*\generator Msftedit 5.41.15.1507;}\viewkind4\uc1\pard\s2\sb100\sa100\cf1\b\f0\fs24 http://www.w3schools.com/xml/xml_whatis.asp\par
What is XML?\par
\pard{\pntext\f0 1\tab}{\*\pn\pnlvlbody\pnf0\pnindent360\pnstart1\pndec }
\fi-360\li720\sb100\sa100\tx720\cf2\b0 XML stands for E\b X\b0 tensible \b M\b0 arkup \b L\b0 anguage \par
\pard{\pntext\f0 2\tab}{\*\pn\pnlvlbody\pnf0\pnindent360\pnstart2\pndec }
\fi-360\li720\sb100\sa100\tx720 XML is a \b markup language\b0  much like HTML. \par
\pard{\pntext\f0 3\tab}{\*\pn\pnlvlbody\pnf0\pnindent360\pnstart3\pndec }
\fi-360\li720\sb100\sa100\tx720 XML was designed to \b describe data\b0\i .\i0  \par
\pard{\pntext\f0 4\tab}{\*\pn\pnlvlbody\pnf0\pnindent360\pnstart4\pndec }
\fi-360\li720\sb100\sa100\tx720 XML tags are not predefined in XML. You must \b define your own tags\b0 . \par
\pard{\pntext\f0 5\tab}{\*\pn\pnlvlbody\pnf0\pnindent360\pnstart5\pndec }
\fi-360\li720\sb100\sa100\tx720 XML is \b self describing\b0 . \par
\pard{\pntext\f0 6\tab}{\*\pn\pnlvlbody\pnf0\pnindent360\pnstart6\pndec }
\fi-360\li720\sb100\sa100\tx720 XML uses a DTD (\b Document Type Definition\b0 ) to formally describe the data. \par
\pard\li935\sb100\sa100\par
\pard\s2\sb100\sa100\tx0\cf1\b The main difference between XML and HTML\par
\pard\sb100\sa100\tx0\tx2618\cf2\b0 XML is \b not a replacement\b0  for HTML.\line XML and HTML were designed with \b different goals\b0 :\par
XML was designed to \b describe data\b0  and to focus on \b what data is\b0 .\line HTML was designed to \b display data\b0  and to focus on \b how data looks\b0 .\par
HTML is about \b displaying\b0  information, XML is about \b describing\b0  information.\par
\pard\s2\sb100\sa100\cf1\b XML is Free and Extensible\par
\pard\sb100\sa100\cf2 XML tags are not predefined. You must "invent" your own tags.\b0\par
The tags used to mark up HTML documents and the structure of HTML documents are predefined. The author of HTML documents can only use tags that are defined in the HTML standard (like <p>, <h1>, etc.).\par
XML allows the author to define his own tags and his own document structure.\par
The tags in the example above (like <to> and <from>) are not defined in any XML standard. These tags are "invented" by the author of the XML document.\par
\pard\sb100\sa100\tx0\tx2618\par
\pard\s2\sb100\sa100\tx0\tx2618\cf1\b XML is extensible\par
\pard\sb100\sa100\tx0\tx2618\cf2\b0 The tags used to markup HTML documents and the structure of HTML documents are \b predefined\b0 . The author of HTML documents can only use tags that are defined \b in the HTML standard\b0 .\par
XML allows the author to \b define his own tags\b0  and his own document structure.\par
\pard\s2\sb100\sa100\cf1\b XML is a complement to HTML\par
\pard\sb100\sa100\cf2\b0 It is important to understand that \b XML is not a replacement for HTML\b0 . In the future development of the Web it is most likely that XML will be used to structure and describe the Web data, while HTML will be used to format and display the same data.\par
\pard\s2\sb100\sa100\cf1\b XML in future Web development\par
\pard\sb100\sa100\cf2\b0 We have been participating in XML development since its creation. It has been amazing to see how quickly the XML standard has been developed, and how quickly a large number of software vendors have adopted the standard.\par
We strongly believe that XML will be as important to the future of the Web as HTML has been to the foundation of the Web. XML is the future for all data transmission and data manipulation over the Web.\par
\pard\s2\sb100\sa100\cf1\b\par
\pard{\pntext\f0 1\tab}{\*\pn\pnlvlbody\pnf0\pnindent360\pnstart1\pndec }
\fi-360\li720\sb100\sa100\tx720\cf2\b0 XML can keep data separated from your HTML \par
\pard{\pntext\f0 2\tab}{\*\pn\pnlvlbody\pnf0\pnindent360\pnstart2\pndec }
\fi-360\li720\sb100\sa100\tx720 XML can be used to store data inside HTML documents \par
\pard{\pntext\f0 3\tab}{\*\pn\pnlvlbody\pnf0\pnindent360\pnstart3\pndec }
\fi-360\li720\sb100\sa100\tx720 XML can be used as a format to exchange information \par
\pard{\pntext\f0 4\tab}{\*\pn\pnlvlbody\pnf0\pnindent360\pnstart4\pndec }
\fi-360\li720\sb100\sa100\tx720 XML can be used to store data in files or in databases \par
\pard\s2\sb100\sa100\cf1\b\par
XML can keep data separated from your HTML\par
\pard\sb100\sa100\cf2\b0 HTML pages are used to display data. Data is often stored inside HTML pages. With XML this data can now be stored in a separate XML file. This way you can concentrate on using HTML for formatting and display, and be sure that changes in the underlying data will not force changes to any of your HTML code.\par
\pard\s2\sb100\sa100\cf1\b XML can also store data inside HTML documents\par
\pard\sb100\sa100\cf2\b0 XML data can also be stored inside HTML pages as "Data Islands". You can still concentrate on using HTML for formatting and displaying the data.\f1\~\f0\par
\pard\s2\sb100\sa100\cf1\b XML can be used to exchange data\par
\pard\sb100\sa100\cf2\b0 In the real world, computer systems and databases contain data in incompatible formats. One of the most time consuming challenges for developers has been to exchange data between such systems over the Internet. Converting the data to XML can greatly reduce this complexity and create data that can be read by different types of applications.\par
\pard\s2\sb100\sa100\cf1\b XML can be used to store data\par
\pard\sb100\sa100\cf2\b0 XML can also be used to store data in files or in databases. Applications can be written to store and retrieve information from the store, and generic applications can be used to display the data.\par
\pard\s2\sb100\sa100\cf1\b XML Can Make your Data More Useful\par
\pard\sb100\sa100\cf2 With XML, your data is available to more users.\b0\par
Since XML is independent of hardware, software and application, you can make your data available to other than only standard HTML browsers.\par
Other clients and applications can access your XML files as data sources, like they are accessing databases. Your data can be made available to all kinds of "reading machines" (agents), and it is easier to make your data available for blind people, or people with other disabilities.\par
\pard\par
\pard\sb100\sa100\tx0\tx2618\par
\par
\par
\pard\s2\sb100\sa100\cf1\b An example XML document:\par
\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx5101\pard\intbl\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0\b0 <?xml version="1.0"?>\par
<note>\par
<to>Tove</to>\par
<from>Jani</from>\par
<heading>Reminder</heading>\par
<body>Don't forget me this weekend!</body>\par
</note> \cell\row\pard\sb100\sa100\cf2 The first line in the document: \i The XML declaration\i0  should always be included. It defines the XML version of the document. In this case the document conforms to the 1.0 specification of XML: \par
\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx2581\pard\intbl\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0 <?xml version="1.0"?>\cell\row\pard\sb100\sa100\cf2 The next line defines the first element of the document (the root element): \par
\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx781\pard\intbl\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0 <note>\cell\row\pard\sb100\sa100\cf2 The next lines defines 4 child elements of the root (to, from, heading, and body):\par
\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx5101\pard\intbl\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0 <to>Tove</to>\par
<from>Jani</from>\par
<heading>Reminder</heading>\par
<body>Don't forget me this weekend!</body>\cell\row\pard\sb100\sa100\cf2 The last line defines the end of the root element:\par
\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx901\pard\intbl\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0 </note>\cell\row\pard\cf2\par
\par
\pard\s2\sb100\sa100\cf1\b All XML elements must have a closing tag\par
\pard\sb100\sa100\cf2\b0 In HTML some elements do not have to have a closing tag. The following code is legal in HTML:\par
\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx3421\pard\intbl\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0 <p>This is a paragraph\par
<p>This is another paragraph\cell\row\pard\sb100\sa100\cf2 In XML all elements must have a closing tag like this:\par
\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx4021\pard\intbl\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0 <p>This is a paragraph</p>\par
<p>This is another paragraph</p>\f1\~\f0\cell\row\pard\cf2\par
\par
\pard\s2\sb100\sa100\cf1\b XML tags are case sensitive\par
\pard\sb100\sa100\cf2\b0 XML tags are case sensitive. The tag <Letter> is different from the tag <letter>.\par
Opening and closing tags must therefore be written with the same case:\par
\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx4381\pard\intbl\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0 <Message>This is incorrect</message>\cell\row\pard\cf2\f1\~\f0  \par
\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx4141\pard\intbl\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0 <message>This is correct</message>\cell\row\pard\cf2\par
\par
\pard\s2\sb100\sa100\cf1\b All XML elements must be properly nested\par
\pard\sb100\sa100\cf2\b0 In HTML some elements can be improperly nested within each other like this:\par
\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx5101\pard\intbl\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0 <b><i>This text is bold and italic</b></i>\cell\row\pard\sb100\sa100\cf2 In XML all elements must be properly nested within each other like this\par
\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx5101\pard\intbl\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0 <b><i>This text is bold and italic</i></b>\cell\row\pard\cf2\par
\par
\pard\s2\sb100\sa100\cf1\b All XML documents must have a root tag\par
\pard\sb100\sa100\cf2\b0 All XML documents must contain a single tag pair to define the root element. All other elements must be nested within the root element. All elements can have sub (children) elements. Sub elements must be in pairs and correctly nested within their parent element:\par
\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx1861\pard\intbl\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0 <root>\par
  <child>\par
    <subchild>\par
    </subchild>\par
  </child>\par
</root> \cell\row\pard\cf2\par
\par
\pard\s2\sb100\sa100\cf1\b Attribute values must always be quoted\par
\pard\sb100\sa100\cf2\b0 XML elements can have attributes in name/value pairs just like in HTML. In XML the attribute value must always be quoted. Study the two XML documents below. The first one is incorrect, the second is correct:\par
\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx5101\pard\intbl\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0 <?xml version="1.0"?>\par
<note date=12/11/99>\par
<to>Tove</to>\par
<from>Jani</from>\par
<heading>Reminder</heading>\par
<body>Don't forget me this weekend!</body>\par
</note>\cell\row\pard\cf2\par
\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx5101\pard\intbl\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0 <?xml version="1.0"?>\par
<note date="12/11/99">\par
<to>Tove</to>\par
<from>Jani</from>\par
<heading>Reminder</heading>\par
<body>Don't forget me this weekend!</body>\par
</note>\cell\row\pard\s2\sb100\sa100\cf1\b XML Attributes\par
\pard\sb100\sa100\cf2\b0 XML attributes are normally used to describe XML elements, or to provide additional information about elements. From HTML you can remember this construct: <IMG SRC="computer.gif">. In this HTML example SRC is an attribute to the IMG element. The SRC attribute provides additional information about the element.\par
Attributes are always contained within the start tag of an element. Here are some examples:\par
\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx2941\pard\intbl\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0 HTML examples:\par
\par
<img src="computer.gif">\par
<a href="demo.asp">\par
XML examples:\par
\par
<file type="gif">\par
<person id="3344">\cell\row\pard\sb100\sa100\cf2 Usually, or most common, attributes are used to provide information that is not a part of the content of the XML document. Did you understand that? Here is another way to express that: Often attribute data is more important to the XML parser than to the reader. Did you understand it now? Anyway, in the example above, the person id is a counter value that is irrelevant to the reader, but important to software that wants to manipulate the person element.\f1\~\f0\par
\pard\par
\pard\s2\sb100\sa100\cf1\b Use of Elements vs. Attributes\par
\pard\sb100\sa100\cf2\b0 Take a look at these examples:\par
\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx3541\pard\intbl\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0 Using an Attribute for sex:\par
\par
<person sex="female">\par
  <firstname>Anna</firstname>\par
  <lastname>Smith</lastname>\par
</person>\par
\par
Using an Element for sex:\par
\par
<person>\par
  <sex>female</sex>\par
  <firstname>Anna</firstname>\par
  <lastname>Smith</lastname>\par
</person>\cell\row\pard\sb100\sa100\cf2 In the first example sex is an attribute. In the last example sex is an element. Both examples provides the same information to the reader.\par
There are no fixed rules about when to use attributes to describe data, and when to use elements. My experience is however; that attributes are handy in HTML, but in XML you should try to avoid them, as long as the same information can be expressed using elements.\par
Here is another example, demonstrating how elements can be used instead of attributes. The following three XML documents contain exactly the same information. A date attribute is used in the first, a date element is used in the second, and an expanded date element is used in the third: \par
\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx5101\pard\intbl\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0 <?xml version="1.0"?>\par
<note date="12/11/99">\par
<to>Tove</to>\par
<from>Jani</from>\par
<heading>Reminder</heading>\par
<body>Don't forget me this weekend!</body>\par
</note> \par
<?xml version="1.0"?>\par
<note>\par
<date>12/11/99</date>\par
<to>Tove</to>\par
<from>Jani</from>\par
<heading>Reminder</heading>\par
<body>Don't forget me this weekend!</body>\par
</note> \par
<?xml version="1.0"?>\par
<note>\par
<date>\par
  <day>12</day>\par
  <month>11</month>\par
  <year>99</year>\par
</date>\par
<to>Tove</to>\par
<from>Jani</from>\par
<heading>Reminder</heading>\par
<body>Don't forget me this weekend!</body>\par
</note> \cell\row\pard\cf2\par
\par
\pard\s2\sb100\sa100\cf1\b Avoid using attributes? (I say yes!) \par
\pard\sb100\sa100\cf2\b0 Why should you avoid using attributes? Should you just take my word for it? These are some of the problems using attributes: \par
\pard{\pntext\f0 1\tab}{\*\pn\pnlvlbody\pnf0\pnindent360\pnstart1\pndec }
\fi-360\li720\sb100\sa100\tx720 attributes can not contain multiple values (elements can) \par
\pard{\pntext\f0 2\tab}{\*\pn\pnlvlbody\pnf0\pnindent360\pnstart2\pndec }
\fi-360\li720\sb100\sa100\tx720 attributes are not expandable (for future changes) \par
\pard{\pntext\f0 3\tab}{\*\pn\pnlvlbody\pnf0\pnindent360\pnstart3\pndec }
\fi-360\li720\sb100\sa100\tx720 attributes can not describe structures (like child elements can) \par
\pard{\pntext\f0 4\tab}{\*\pn\pnlvlbody\pnf0\pnindent360\pnstart4\pndec }
\fi-360\li720\sb100\sa100\tx720 attributes are more difficult to manipulate by program code \par
\pard{\pntext\f0 5\tab}{\*\pn\pnlvlbody\pnf0\pnindent360\pnstart5\pndec }
\fi-360\li720\sb100\sa100\tx720 attribute values are not easy to test against a DTD \par
\pard\sb100\sa100 If you start using attributes as containers for XML data, you might end up with documents that are both difficult to maintain and to manipulate. What I'm trying to say is that you should use \b elements\b0  to describe your data. Use attributes only to provide information that is not relevant to the reader. Please don't end up like this:\par
\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx4861\pard\intbl\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0 <?xml version="1.0"?>\par
<note day="12" month="11" year="99"\par
to="Tove" from="Jani" heading="Reminder"\par
body="Don't forget me this weekend!">\par
</note> \cell\row\pard\sb100\sa100\cf2 This don't look much like XML. Got the point?\par
\pard\par
\pard\s2\sb100\sa100\cf1\b An Exception to my Attribute rule\par
\pard\sb100\sa100\cf2\b0 Rules always have exceptions. My rule about not using attributes has one too:\par
Sometimes I assign ID references to elements in my XML documents. These ID references can be used to access XML element in much the same way as the NAME or ID attributes in HTML. This example demonstrates this:\par
\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx5581\pard\intbl\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0 <?xml version="1.0"?>\par
<messages>\par
  <note ID="501">\par
    <to>Tove</to>\par
    <from>Jani</from>\par
    <heading>Reminder</heading>\par
    <body>Don't forget me this weekend!</body>\par
  </note>\par
\par
  <note ID="502">\par
    <to>Jani</to>\par
    <from>Tove</from>\par
    <heading>Re: Reminder</heading>\par
    <body>I will not!</body>\par
  </note> \par
</messages>\cell\row\pard\sb100\sa100\tx0\tx2618\cf2\line The ID in these examples is just a counter, or a unique identifier, to identify the different notes in the XML file.\par
\pard\s2\sb100\sa100\cf1\b "Well Formed" XML documents\par
\pard\sb100\sa100\cf2\b0 A "Well Formed" XML document is a document that conforms to the XML syntax rules that we described in the previous chapter.\par
The following is a "Well Formed" XML document:\par
\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx5101\pard\intbl\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0 <?xml version="1.0"?>\par
<note>\par
<to>Tove</to>\par
<from>Jani</from>\par
<heading>Reminder</heading>\par
<body>Don't forget me this weekend!</body>\par
</note> \cell\row\pard\cf2\par
\par
\pard\s2\sb100\sa100\cf1\b "Valid" XML documents\par
\pard\sb100\sa100\cf2\b0 A "Valid" XML document is a "Well Formed" XML document which conforms to the rules of a Document Type Definition (DTD).\par
The following is the same document as above but with an added reference to a DTD:\par
\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx5101\pard\intbl\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0 <?xml version="1.0"?>\par
<!DOCTYPE note SYSTEM "InternalNote.dtd">\par
<note>\par
<to>Tove</to>\par
<from>Jani</from>\par
<heading>Reminder</heading>\par
<body>Don't forget me this weekend!</body>\par
</note> \cell\row\pard\cf2\par
\par
\pard\s2\sb100\sa100\cf1\b More about XML DTD \par
\pard\sb100\sa100\cf2\b0 You can read more about DTD in the chapter \cf3\ul XML DTD\cf2\ulnone . \par
The purpose of a DTD is to define the legal building blocks of an XML document. It defines the document structure with a list of legal elements. A DTD can be declared inline in your XML document, or as an external reference.\par
\pard\par
\pard\s2\sb100\sa100\cf1\b Internal DTD\par
\pard\sb100\sa100\cf2\b0 This is an XML document with a Document Type Definition: (\cf3\ul Open it in IE5\cf2\ulnone , and select view source)\par
\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx5221\pard\intbl\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0 <?xml version="1.0"?>\par
<!DOCTYPE note [\par
  <!ELEMENT note    (to,from,heading,body)>\par
  <!ELEMENT to      (#PCDATA)>\par
  <!ELEMENT from    (#PCDATA)>\par
  <!ELEMENT heading (#PCDATA)>\par
  <!ELEMENT body    (#PCDATA)>\par
]>\par
<note>\par
<to>Tove</to>\par
<from>Jani</from>\par
<heading>Reminder</heading>\par
<body>Don't forget me this weekend!</body>\par
</note> \cell\row\pard\sb100\sa100\cf2 The DTD is interpreted like this:\line\b !ELEMENT note\b0  (in line 2) defines the element "note" as having four elements: "to,from,heading,body".\line\b !ELEMENT to\b0  (in line 3) defines the "to" element\f1\~\f0  to be of the type "CDATA".\line\b !ELEMENT from\b0  (in line 4) defines the "from" element to be of the type "CDATA"\line and so on.....\par
\pard\par
\pard\s2\sb100\sa100\cf1\b External DTD\par
\pard\sb100\sa100\cf2\b0 This is the same XML document with an external DTD:\f1\~\f0  (\cf3\ul Open it in IE5\cf2\ulnone , and select view source)\par
\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx5101\pard\intbl\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0 <?xml version="1.0"?>\par
<!DOCTYPE note SYSTEM "note.dtd">\par
<note>\par
<to>Tove</to>\par
<from>Jani</from>\par
<heading>Reminder</heading>\par
<body>Don't forget me this weekend!</body>\par
</note> \cell\row\pard\sb100\sa100\cf2 This is a copy of the file "note.dtd" containing the Document Type Definition:\par
\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx4621\pard\intbl\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0 <?xml version="1.0"?>\par
<!ELEMENT note (to,from,heading,body)>\par
<!ELEMENT to (#PCDATA)>\par
<!ELEMENT from (#PCDATA)>\par
<!ELEMENT heading (#PCDATA)>\par
<!ELEMENT body (#PCDATA)>\cell\row\pard\cf2\par
\par
\pard\s2\sb100\sa100\cf1\b Why use a DTD? \par
\pard\sb100\sa100\cf2\b0 XML provides an application independent way of sharing data. With a DTD, independent groups of people can agree to use a common DTD for interchanging data. Your application can use a standard DTD to verify that data that you receive from the outside world is valid. You can also use a DTD to verify your own data. \par
A lot of forums are emerging to define standard DTDs for almost everything in the areas of data exchange. Take a look at: \cf3\ul CommerceNet's XML exchange\cf2\ulnone  and \cf3\ul http://www.schema.net\cf2\ulnone .\par
\pard\s2\sb100\sa100\cf1\b The building blocks of XML documents\par
\pard\sb100\sa100\cf2\b0 XML documents (and HTML documents) are made up by the following building blocks:\par
Elements, Tags, Attributes, Entities, PCDATA, and CDATA\par
This is a brief explanation of each of the building blocks:\par
\pard\par
\pard\s2\sb100\sa100\cf1\b Elements\par
\pard\sb100\sa100\cf2\b0 Elements are the main building blocks of both XML and HTML documents.\par
Examples of HTML elements are "body" and "table". Examples of XML elements could be "note" and "message". Elements can contain text, other elements, or be empty. Examples of empty HTML elements are "hr", "br" and "img".\par
\pard\par
\pard\s2\sb100\sa100\cf1\b Tags\par
\pard\sb100\sa100\cf2\b0 Tags are used to markup elements.\par
A starting tag like <element_name> mark up the beginning of an element, and an ending tag like </element_name>\f1\~\f0  mark up the end of\f1\~\f0  an element.\par
Examples:\line A body element: <body>body text in between</body>.\line A message element: <message>some message in between</message>\par
\pard\par
\pard\s2\sb100\sa100\cf1\b Attributes\par
\pard\sb100\sa100\cf2\b0 Attributes provide extra information about elements.\par
Attributes are placed inside the start tag of an element. Attributes come in name/value pairs. The following "img" element has an additional information about a source file:\par
\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx8340\pard\intbl\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0 <img src="computer.gif" />\cell\row\pard\sb100\sa100\cf2 The name of the element is "img". The name of the attribute is "src". The value of the attribute is "computer.gif". Since the element itself is empty it is closed by a " /".\par
\pard\par
\pard\s2\sb100\sa100\cf1\b PCDATA\par
\pard\sb100\sa100\cf2\b0 PCDATA means parsed character data.\par
Think of character data as the text found between the start tag and the end tag of an XML element.\par
PCDATA is text that will be parsed by a parser. Tags inside the text will be treated as markup and entities will be expanded.\f1\~\f0\par
\pard\par
\pard\s2\sb100\sa100\cf1\b CDATA\par
\pard\sb100\sa100\cf2\b0 CDATA also means character data.\par
CDATA is text that will NOT be parsed by a parser. Tags inside the text will NOT be treated as markup and entities will not be expanded.\par
\pard\par
\pard\s2\sb100\sa100\cf1\b Entities\par
\pard\sb100\sa100\cf2\b0 Entities as variables used to define common text. Entity references are references to entities.\par
Most of you will known the HTML entity reference: "&nbsp;"\f1\~\f0  that is used to insert an extra space in an HTML document. Entities are expanded when a document is parsed by an XML parser.\par
The following entities are predefined in XML:\par
\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx2603\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx4140\pard\intbl\cf0\b Entity References\cell Character\cell\row\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx2603\clvertalc\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx4140\pard\intbl\b0 &lt;\cell <\cell\row\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx2603\clvertalc\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx4140\pard\intbl &gt;\cell >\cell\row\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx2603\clvertalc\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx4140\pard\intbl &amp;\cell &\cell\row\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx2603\clvertalc\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx4140\pard\intbl &quot;\cell "\cell\row\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx2603\clvertalc\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx4140\pard\intbl &apos;\cell '\cell\row\pard\s2\sb100\sa100\cf2\b\f1\~\cf1\f0 "Well Formed" XML documents\par
\pard\sb100\sa100\cf2\b0 A "Well Formed" XML document is a document that conforms to the XML syntax rules that we described in the previous chapter.\par
The following is a "Well Formed" XML document:\par
\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx5101\pard\intbl\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0 <?xml version="1.0"?>\par
<note>\par
<to>Tove</to>\par
<from>Jani</from>\par
<heading>Reminder</heading>\par
<body>Don't forget me this weekend!</body>\par
</note> \cell\row\pard\cf2\par
\par
\pard\s2\sb100\sa100\cf1\b "Valid" XML documents\par
\pard\sb100\sa100\cf2\b0 A "Valid" XML document is a "Well Formed" XML document which conforms to the rules of a Document Type Definition (DTD).\par
The following is the same document as above but with an added reference to a DTD:\par
\trowd\trgaph15\trleft-60\trpaddl15\trpaddr15\trpaddfl3\trpaddfr3
\clvertalc\clcbpat5\clbrdrl\brdrw15\brdrs\brdrcf4\clbrdrt\brdrw15\brdrs\brdrcf4\clbrdrr\brdrw15\brdrs\brdrcf4\clbrdrb\brdrw15\brdrs\brdrcf4 \cellx5101\pard\intbl\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\cf0 <?xml version="1.0"?>\par
<!DOCTYPE note SYSTEM "InternalNote.dtd">\par
<note>\par
<to>Tove</to>\par
<from>Jani</from>\par
<heading>Reminder</heading>\par
<body>Don't forget me this weekend!</body>\par
</note> \cell\row\pard\sb100\sa100\cf2\par
\pard\s2\sb100\sa100\cf1\b XML in this Web\par
\pard\sb100\sa100\cf2\b0 Many applications support XML in a number of ways. In this Web we focus on the XML support in Internet Explorer 5.0. Some visitors have complained about this, but we don't do it because IE5 is the only performer in the XML field. We do it because it is the only practical way to demonstrate XML to a large audience over the Web.\par
So - while we are waiting for Netscape - most of our software examples will work only with IE5. If you want to learn XML the easy way - with lots of examples for you to try out - you will have to live with that.\par
\pard\par
\pard\s2\sb100\sa100\cf1\b XML in Netscape Navigator 5\par
\pard\sb100\sa100\cf2\b0 Netscape has promised full XML support in its new Navigator 5 browser. We hope that this will include standard support for the W3C XML, just as it does in Internet Explorer 5. \par
Based on previous experience we can only hope that Navigator and Explorer will be fully compatible in the future XML field.\par
Your option at the moment - if you want to work with Netscape and XML - is to work with XML on your server and transform your XML to HTML before it is sent to the browser. You can read more about\f1\~\f0  transforming XML to HTML in \cf3\ul the chapters about XSL\cf2\ulnone .\par
\pard\par
\pard\s2\sb100\sa100\cf1\b XML in Internet Explorer 5\par
\pard\sb100\sa100\cf2\b0 Internet Explorer 5 fully supports the international standards for both XML 1.0 and the XML Document Object Model (DOM). These standards are set by the \cf3\ul World Wide Web Consortium (W3C)\cf2\ulnone . \par
You can download IE5 from \cf3\ul http://www.microsoft.com/windows/ie/\cf2\ulnone  \par
Internet Explorer 5.0 has the following XML support:\par
\pard{\pntext\f0 1\tab}{\*\pn\pnlvlbody\pnf0\pnindent360\pnstart1\pndec }
\fi-360\li720\sb100\sa100\tx720 Viewing of XML documents \par
\pard{\pntext\f0 2\tab}{\*\pn\pnlvlbody\pnf0\pnindent360\pnstart2\pndec }
\fi-360\li720\sb100\sa100\tx720 Full support for W3C DTD standards \par
\pard{\pntext\f0 3\tab}{\*\pn\pnlvlbody\pnf0\pnindent360\pnstart3\pndec }
\fi-360\li720\sb100\sa100\tx720 XML embedded in HTML as Data Islands \par
\pard{\pntext\f0 4\tab}{\*\pn\pnlvlbody\pnf0\pnindent360\pnstart4\pndec }
\fi-360\li720\sb100\sa100\tx720 Binding XML data to HTML elements \par
\pard{\pntext\f0 5\tab}{\*\pn\pnlvlbody\pnf0\pnindent360\pnstart5\pndec }
\fi-360\li720\sb100\sa100\tx720 Formatting XML with XSL \par
\pard{\pntext\f0 6\tab}{\*\pn\pnlvlbody\pnf0\pnindent360\pnstart6\pndec }
\fi-360\li720\sb100\sa100\tx720 Formatting XML with CSS \par
\pard{\pntext\f0 7\tab}{\*\pn\pnlvlbody\pnf0\pnindent360\pnstart7\pndec }
\fi-360\li720\sb100\sa100\tx720 Support for CSS Behaviors \par
\pard{\pntext\f0 8\tab}{\*\pn\pnlvlbody\pnf0\pnindent360\pnstart8\pndec }
\fi-360\li720\sb100\sa100\tx720 Access to the XML DOM \par
\pard\sb100\sa100 Examples of these features are given in the next chapters.\par
\pard\s2\sb100\sa100\cf1\b Viewing XML with Internet Explorer 5\par
\pard\sb100\sa100\cf2\b0 You can use IE5 to view an XML document just as you view any HTML page. There are several ways to open an XML document. You can click on a link, type the URL into the address bar, double-click on an XML document in a folder, and so on.\par
If you point IE5 to an XML document, IE5 will display the document with its root element and child elements expanded. A plus (+) or minus sign (-) to the left of the XML elements can be clicked to expand or collapse the element structure, and if you only want to view the raw XML source, you can select "View Source" from the browser menu.\par
If you click on the following filename: \cf3\ul note.xml\cf2\ulnone , IE5 will open the file in an explorer like view.\par
\pard\fi-240\li240\ri600\cf0 <?xml version="1.0" encoding="ISO8859-1" ?> \par
\pard\fi-480\li480\ri600\cf1\ul\b -\cf0\ulnone\b0  <note>\par
\pard\fi-480\li720\ri840\b\f1\~\b0\f0  <to>\b Tove\b0 </to> \par
\b\f1\~\b0\f0  <from>\b Jani\b0 </from> \par
\b\f1\~\b0\f0  <heading>\b Reminder\b0 </heading> \par
\b\f1\~\b0\f0  <body>\b Don't forget me this weekend!\b0 </body> \par
\pard\fi-240\li240\ri600\b\f1\~\b0\f0  </note>\par
\pard\sb100\sa100\cf2\par
\pard\par
\pard\s2\sb100\sa100\cf1\b Viewing an invalid XML file\par
\pard\sb100\sa100\cf2\b0 If an erroneous XML file is opened with IE5, IE5 will report the error in the file.\par
If you click on the following filename: \cf3\ul note_error.xml\cf2\ulnone , IE5 will display an error message.\par
\par
\pard\par
\pard\s2\sb100\sa100\cf1\b Other examples\par
\pard\sb100\sa100\cf2\b0 To help you get the feeling of different types of XML data, we have collected the following XML data files for you: \par
\cf3\ul An XML CD catalog\cf2\ulnone  \par
\cf3\ul An XML plant catalog\cf2\ulnone  \par
\cf3\ul A Simple Menu\cf2\ulnone  \par
\pard\sb100\sa100\tx0\tx2618\par
\pard\s2\sb100\sa100\cf1\b Displaying XML with JavaScript\par
\pard\sb100\sa100\cf2\b0 To display XML data inside an HTML page you can use JavaScript to import data from an XML file. To see how XML and HTML complement each other this way; first look at the \b XML\b0  document (\cf3\ul note.xml\cf2\ulnone ), then open the \b HTML \b0 document (\cf3\ul note.htm\cf2\ulnone ) that contains a JavaScript which reads an XML file and displays the information inside the HTML page.\par
To see how it works, \cf3\ul Try It Yourself\cf2\ulnone\f1\~\f0  \par
\pard\par
\pard\s2\sb100\sa100\cf1\b Displaying XML with CSS\par
\pard\sb100\sa100\cf2\b0 To demonstrate how XML files can be formatted with CSS we have compiled the following XML files:\f1\~\f0\par
Take a look at this pure XML file: \cf3\ul The CD Catalog\line\cf2\ulnone Then look at this style sheet: \cf3\ul The CSS file\line\cf2\ulnone Finally, view: \cf3\ul The CD Catalog formatted with the CSS file\cf2\ulnone\par
Even if it looks right to use CSS this way, we strongly believe that formatting with XSL will be the standard way to format XML in future (or as soon as the main browsers support it).\par
\pard\par
\pard\s2\sb100\sa100\cf1\b Writing your Homepage in XML?\par
\pard\sb100\sa100\cf2\b0 Will we write our homepages in XML in the future?\par
No, we don't think so. But we could not resist giving it a try : \cf3\ul A homepage written in XML\cf2\ulnone\par
This might be the answer: \cf3\ul Take a XHTML tutorial\cf2\ulnone\par
\pard\par
\pard\s2\sb100\sa100\cf1\b Displaying XML with XSL\par
\pard\sb100\sa100\cf3\ul\b0 Follow this link\cf2\ulnone  to see how the content of an XML file can be displayed in the browser.\par
\cf3\ul Follow this link\cf2\ulnone  to see how the same XML file is displayed by using an XSL style sheet.\par
\cf3\ul Follow this link\cf2\ulnone  to see how the same data can be prepared by the server and returned to the browser as an HTML file.\par
\pard\par
\pard\s2\sb100\sa100\cf1\b To learn more about XSL\par
\pard\sb100\sa100\cf2\b0 To learn more about XSL go to the \cf3\ul XSL chapter\cf2\ulnone . \cf1\par
\pard\sb100\sa100\tx0\tx2618\ul\b\i http://www.w3.org/XML/:\par
\pard\s2\li980\ri612\sb100\sa100\lang9\ulnone\i0 Introduction\par
\pard\li1224\ri612\sb100\sa100\cf2\b0 Extensible Markup Language (XML) is a simple, very flexible text format derived from SGML (ISO 8879). Originally designed to meet the challenges of large-scale electronic publishing, XML is also playing an increasingly important role in the exchange of a wide variety of data on the Web and elsewhere.\par
This page describes the work being done at W3C within the XML Activity, and how it is structured. Work at W3C takes place in \i Working Groups\i0 . The Working Groups within the XML Activity are listed below, together with links to their individual web pages.\par
You can find and download formal technical specifications here, because we publish them. This is \b\i not\b0\i0  a place to find tutorials, products, courses, books or other XML-related information. There are some links below that may help you find such resources.\par
You will find links to W3C Recommendations, Proposed Recommendations, Working Drafts, conformance test suites and other documents on the pages for each Working Group. Each document also contains email addresses you can use to send comments or questions, for example if you have been writing software to implement them and have found problems or errors.\par
Please do \b\i not\b0\i0  send us email asking us to help you learn a language or specification; there are plenty of resources online, and the people editing and developing the specifications are very busy. We \b\i are\b0\i0  interested in technical comments and errata.\par
If your organization would like to join the W3C, or if you would like to participate formally in a working group (and have the necessary resources to attend meetings), you can read more \cf3\ul about the Consortium\cf2\ulnone .\par
\pard\s2\li980\ri612\sb100\sa100\cf1\b Working Groups\par
\pard\li1224\ri612\sb100\sa100\cf2\b0 There is more detail about each of these Working Groups in the \cf3\ul Activity Statement\cf2\ulnone  and also on the individual Working Group public web pages.\par
Most Working Groups have both a public web page and another more private one that is only accessible to W3C Members. The private page has telephone numbers, schedules for meetings and conference calls, links to internal editing drafts, and other administrative information.\par
\pard\s3\li1224\ri612\sb100\sa100\b XML Coordination Group\par
\pard\li1224\ri612\sb100\sa100\b0 The membership of this group is the Chairs of the individual Working Groups. Its role is to provide a forum for coordination between the Working Groups of the XML Activity, and between the XML Activity and other parts of W3C, and between the XML Activity and other organizations.\par
This group does not produce specifications, so does not have a public page of its own. You can read the \cf3\ul XML CG Charter\cf2\ulnone , and there is more information about the XML CG in the \cf3\ul Activity Statement\cf2\ulnone . There is is also a \cf3\ul member-only page\cf2\ulnone .\par
\pard\s3\li1224\ri612\sb100\sa100\b XML Core Working Group\par
\pard\li1224\ri612\sb100\sa100\b0 The mission of the XML Core Working Group is to develop and maintain the specifications for XML itself and closely related specifications such as Namespaces in XML, the XML Information Set, and XInclude.\par
You can read the \cf3\ul XML Core Working Group Public Page\cf2\ulnone  and the \cf3\ul XML Core Working Group Charter\cf2\ulnone , and there is also a \cf3\ul member-only page\cf2\ulnone .\par
\pard\s3\li1224\ri612\sb100\sa100\b XSL Working Group\par
\pard\li1224\ri612\sb100\sa100\b0 The XSL Working Group is responsible for the Extensible Stylesheet Language (XSL), including both XSL Transformations (XSLT) and XSL Formatting Objects (XSL/FO). They moved into the W3C Architecture Domain at the start of 2003.\par
You can read the \cf3\ul XSL Working Group Public Page\cf2\ulnone  which links to their \cf3\ul Charter\cf2\ulnone  and to their \cf3\ul member-only page\cf2\ulnone .\par
\pard\s3\li1224\ri612\sb100\sa100\b The Efficient XML Interchange Working Group\par
\pard\li1224\ri612\sb100\sa100\b0 The Efficient XML Interchange Working Group is responsible for developing ways to exchange XML documents in ways that are as efficient as is practical without compromising the interoperability of XML itself. It also continues the work of the \cf3\ul XML Binary Characterization Working Group\cf2\ulnone . This Working Group is \b\i not\b0\i0  about producing a closed, proprietary or obfuscated \f1\ldblquote\f0 binary XML \f1\rdblquote\emdash\f0 The W3C is all about increasing interoperability!\par
You can read the \cf3\ul Efficient XML Interchange Working Group Public Page\cf2\ulnone  and their \cf3\ul Charter\cf2\ulnone ; there is also a \cf3\ul member-only page\cf2\ulnone  for technical discussion and administration.\par
\pard\s3\li1224\ri612\sb100\sa100\b XML Binary Characterization Working Group\par
\pard\li1224\ri612\sb100\sa100\b0 In September of 2003 the W3C held a public \cf3\ul Workshop\cf2\ulnone  to discuss whether W3C should develop a binary interchange format for people needing greater efficiency than was claimed possible using text. The conclusion of the Workshop was that it was not clear whether the benefits of such a format could outweigh the costs, but that the issues involved needed further study. The XML Binary Characterization Working Group was created to investigate this area, and to enable precise measurements to be made of the benefits (if any) of a binary interchange format over the existing methods of textual interchange. The Working Group was explicitly \b\i not\b0\i0  chartered to do any technical work on developing or choosing a single format: that would be the work of a future Working Group, if and only if the XML Binary Characterization Working Group can demonstrate that such efforts would be worth while.\par
You can read the \cf3\ul XML Binary Characterization Working Group Public Page\cf2\ulnone  which links to their \cf3\ul charter\cf2\ulnone  and to their \cf3\ul Member-only page\cf2\ulnone .\par
\pard\s3\li1224\ri612\sb100\sa100\b XML Processing Model Working Group\par
\pard\li1224\ri612\sb100\sa100\b0 The XML Processing Model Working Group is working on defining a scripting language for XML: that is, a way to specify what operations should be performed on an XML document and in what order.\par
You can read the \cf3\ul XML Processing Model Working Group Public Page\cf2\ulnone  and their \cf3\ul Charter\cf2\ulnone ; there is also a \cf3\ul member-only page\cf2\ulnone  for administration purposes.\par
\pard\s3\li1224\ri612\sb100\sa100\b XML Linking Working Group\par
\pard\li1224\ri612\sb100\sa100\b0 The charter of the XML Linking Working Group has expired, and the group is not currently active. When still active, it was working on hypertext links for XML. This includes the XML Linking Language (XLink) and the XML Pointer Language (XPointer).\par
You can read the deprecated \cf3\ul XML Linking Working Group Public Page\cf2\ulnone . There is also a \cf3\ul member-only page\cf2\ulnone .\par
\pard\s3\li1224\ri612\sb100\sa100\b XML Query Working Group\par
\pard\li1224\ri612\sb100\sa100\b0 The XML Query Working Group is working on the XML Query Language, a way to provide flexible query facilities to extract data from real and virtual XML documents on the Web. This includes publication of XQuery and also XPath, in conjunction with the \cf3\ul XSL Working Group\cf2\ulnone  (part of the \cf3\ul Style Activity\cf2\ulnone ).\par
You can read the \cf3\ul XML Query Working Group Public Page\cf2\ulnone  and the \cf3\ul XML Query Working Group Charter\cf2\ulnone , and there is also a \cf3\ul member-only page\cf2\ulnone .\par
\pard\s3\li1224\ri612\sb100\sa100\b XML Schema Working Group\par
\pard\li1224\ri612\sb100\sa100\b0 W3C XML Schemas provide mechanisms to define and describe the structure, content, and to some extent semantics of XML documents.\par
\pard\sb100\sa100\tx0\tx2618\lang1033\par
\par
\par
\par
\par
\pard\sb100\sa100\tab\tab\par
\pard\li360\sb100\sa100\tx374\par
\pard\li360\sb100\sa100\par
\pard\li1496\cf0\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
}
 